- if @course.is_instructor?(@user) && !params[:student_view]
  - content_for :user_options do
    %li= 'Download CSV Roster'
    %li= 'Upload CSV Roster'
    %li= 'Add single student'
    %li= 'Remove single student'

%h2=h @course.name  + ' (' + @course.semester.name + ')'

- if @course.is_designer?(@user) 
  - if !params[:student_view]
    %ul
      %li
        %a{ :href => edit_course_path(@course) } Edit Course
      %li
        %a{ :href => '?student_view=1' } Student view of this page
  - else
    %a{ :href => course_path(@course) } Designer view of this page

#description= markdown @course.description

%h3 Assignments
- if @course.is_designer?(@user) && !params[:student_view]
  %ul
    %li
      %a{ :href => new_course_assignment_path(@course) } Add Assignment
    %li
      %a{ :href => course_rubrics_path(@course) } Course Rubrics
  .item-set
    - counter = 0
    - @course.assignments.each do |assignment|
      - counter += 1
      .item
        .title
          %a{:href => assignment_path(assignment)}= 'Assignment #' + counter.to_s + (assignment.name.blank? ? '' : ': ' + h(assignment.name))
        .description
          - if assignment.starts_at > @course.now
            Begins in 
            = distance_of_time_in_words(assignment.starts_at, @course.now) + "."
          - elsif assignment.ends_at > @course.now
            - if assignment.current_module(@user).position == 1 || assignment.is_participant?(@user)
              The
              = '"' + assignment.current_module(@user).name + '"'
              module ends in
              = distance_of_time_in_words(assignment.current_module(@user).ends_at, @course.now) + "."
            - elsif !assignment.is_participant?(@user)
              The submission module has closed. 
            The assignment ends in
            = distance_of_time_in_words(assignment.ends_at, @course.now) + "."
          - else
            Ended
            = distance_of_time_in_words(assignment.ends_at, @course.now)
            ago.
        .options
          = link_to 'Move up', { :controller => 'assignments', :action => 'move_higher', :id => assignment }
          = link_to 'Move down', { :controller => 'assignments', :action => 'move_lower', :id => assignment }
          = link_to("Delete", { :controller => 'assignments', :action => "destroy", :id => assignment }, :confirm => "Are you sure you want to delete this module?", :method => :delete)


- else
  %ul
    - counter = 0
    - @course.assignments.each do |assignment|
      - counter += 1
      %li
        %a{:href => assignment_path(assignment)}= 'Assignment #' + counter.to_s
        - if assignment.starts_at > @course.now
          Begins in 
          = distance_of_time_in_words(assignment.starts_at, @course.now) + "."
        - elsif assignment.ends_at > @course.now
          - if assignment.current_module(@user).position == 1 || assignment.is_participant?(@user)
            The
            = '"' + assignment.current_module(@user).name + '"'
            module ends in
            = distance_of_time_in_words(assignment.current_module(@user).ends_at, @course.now) + "."
          - elsif !assignment.is_participant?(@user)
            The submission module has closed. 
          The assignment ends in
          = distance_of_time_in_words(assignment.ends_at, @course.now) + "."
        - else
          Ended
          = distance_of_time_in_words(assignment.ends_at, @course.now)
          ago.

- if @course.is_assistant?(@user) && !params[:student_view]
  %h3 Roster
  %h4 Assistants
  - if @user && (@user == @course.user || @user.is_admin?)
    %a{ :href => edit_course_course_participants_path(@course, { :level => 2 }) } Edit Assistants
  %ul
    - @course.assistants.each do |a|
      %li= a.name

  %h4 Designers
  - if @user && (@user == @course.user || @user.is_admin?)
    %a{ :href => edit_course_course_participants_path(@course, { :level => 1 }) } Edit Designers
  %ul
    - @course.designers.each do |d|
      %li= d.name

  %h4 Students
  - if @user && (@user == @course.user || @user.is_admin?)
    %a{ :href => edit_course_course_participants_path(@course, { :level => 0 }) } Edit Students
  %p
    There are
    = @course.student_count
    students in this course.
    - if @course.is_instructor?(@user)
      Use the options in the sidebar to manage the roster.
