.text
  = markdown @assignment_participation.view_text
  - portfolio = (@assignment_participation.assignment_submission.show_info(@assignment_participation.position, @user) rescue '')
  - if !portfolio.blank?
    %p
      %strong Portfolio

.info= (@assignment_participation.show_info(@user) rescue '')

= (@assignment_submission.show_info(@current_module_position, @user) rescue '')

- if !@form.empty?
  .form{:id => "form-#{@form[:id]}"}
    
  :javascript
    Ext.onReady(function(){
      new Ext.form.FormPanel({
        renderTo: "form-#{@form[:id]}",
        html: #{@form[:content].to_json},
        method: #{@form[:method].to_json},
        fileUpload: #{@form[:fileUpload] ? 'true' : 'false'},
        url: #{@form[:url].to_json},
        buttons: [{
          text: #{@form[:submit].to_json},
          type: 'submit',
          handler: function() {
            var fp = this.ownerCt.ownerCt;
            var form = fp.getForm();
            if(form.isValid()) {
              form.submit({
                method: #{@form[:method].to_json},
                url: #{@form[:url].to_json},
                success: function(f,a) {
                  var panel = Ext.ComponentMgr.get(#{@form[:id].to_json});
                  console.log("Loading panel");
                  panel.load({
                    url: #{@form[:show_url].to_json},
                    scripts: true
                  });
                }
              });
            }
          }
        }, {
          text: 'Reset',
          type: 'reset'
        }],
        buttonAlign: 'center',
        bodyBorder: false,
        border: false,
        frame: true,
        method: #{@form[:method].to_json}
      });
    });
